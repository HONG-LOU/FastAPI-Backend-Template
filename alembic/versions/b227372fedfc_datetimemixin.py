"""datetimemixin

Revision ID: b227372fedfc
Revises: 20251030_000004
Create Date: 2025-11-01 14:40:02.552011

"""

from __future__ import annotations

from typing import Sequence

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "b227372fedfc"
down_revision: str | None = "20251030_000004"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ensure citext extension exists before altering column types
    op.execute("CREATE EXTENSION IF NOT EXISTS citext")
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "attachments",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
    )
    op.alter_column(
        "attachments", "uploader_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column("attachments", "s3_key", existing_type=sa.TEXT(), nullable=False)
    op.alter_column(
        "attachments", "filename", existing_type=sa.VARCHAR(length=255), nullable=False
    )
    op.alter_column(
        "attachments",
        "content_type",
        existing_type=sa.VARCHAR(length=127),
        nullable=False,
    )
    op.alter_column(
        "attachments", "size_bytes", existing_type=sa.BIGINT(), nullable=False
    )
    op.alter_column(
        "attachments",
        "status",
        existing_type=sa.VARCHAR(length=16),
        nullable=False,
        existing_server_default=sa.text("'pending'::character varying"),
    )
    op.alter_column(
        "attachments",
        "scanned_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "attachments",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.add_column(
        "chat_participants",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "chat_participants",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
    )
    op.alter_column(
        "chat_participants",
        "role",
        existing_type=sa.VARCHAR(length=16),
        nullable=False,
        existing_server_default=sa.text("'participant'::character varying"),
    )
    op.alter_column(
        "chat_participants",
        "joined_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.create_index(
        op.f("ix_chat_participants_created_at"),
        "chat_participants",
        ["created_at"],
        unique=False,
    )
    op.add_column(
        "chat_rooms",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
    )
    op.alter_column(
        "chat_rooms", "type", existing_type=sa.VARCHAR(length=16), nullable=False
    )
    op.alter_column(
        "chat_rooms",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.add_column(
        "messages", sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False)
    )
    op.alter_column("messages", "room_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("messages", "sender_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column(
        "messages",
        "kind",
        existing_type=sa.VARCHAR(length=16),
        nullable=False,
        existing_server_default=sa.text("'text'::character varying"),
    )
    op.alter_column(
        "messages",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.add_column(
        "refresh_tokens",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
    )
    op.create_index(
        op.f("ix_refresh_tokens_created_at"),
        "refresh_tokens",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_refresh_tokens_expires_at"),
        "refresh_tokens",
        ["expires_at"],
        unique=False,
    )
    op.add_column(
        "user_resumes",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
    )
    op.alter_column(
        "user_resumes",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "email",
        existing_type=sa.VARCHAR(length=320),
        type_=postgresql.CITEXT(),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.drop_index(
        op.f("ix_users_skills_gin"), table_name="users", postgresql_using="gin"
    )
    op.create_index(op.f("ix_users_created_at"), "users", ["created_at"], unique=False)
    op.create_index(op.f("ix_users_skills"), "users", ["skills"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_skills"), table_name="users")
    op.drop_index(op.f("ix_users_created_at"), table_name="users")
    op.create_index(
        op.f("ix_users_skills_gin"),
        "users",
        ["skills"],
        unique=False,
        postgresql_using="gin",
    )
    op.alter_column(
        "users",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "email",
        existing_type=postgresql.CITEXT(),
        type_=sa.VARCHAR(length=320),
        existing_nullable=False,
    )
    op.alter_column(
        "user_resumes",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.drop_column("user_resumes", "updated_at")
    op.drop_index(op.f("ix_refresh_tokens_expires_at"), table_name="refresh_tokens")
    op.drop_index(op.f("ix_refresh_tokens_created_at"), table_name="refresh_tokens")
    op.drop_column("refresh_tokens", "updated_at")
    op.alter_column(
        "messages",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "messages",
        "kind",
        existing_type=sa.VARCHAR(length=16),
        nullable=True,
        existing_server_default=sa.text("'text'::character varying"),
    )
    op.alter_column("messages", "sender_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("messages", "room_id", existing_type=sa.INTEGER(), nullable=True)
    op.drop_column("messages", "updated_at")
    op.alter_column(
        "chat_rooms",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "chat_rooms", "type", existing_type=sa.VARCHAR(length=16), nullable=True
    )
    op.drop_column("chat_rooms", "updated_at")
    op.drop_index(
        op.f("ix_chat_participants_created_at"), table_name="chat_participants"
    )
    op.alter_column(
        "chat_participants",
        "joined_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "chat_participants",
        "role",
        existing_type=sa.VARCHAR(length=16),
        nullable=True,
        existing_server_default=sa.text("'participant'::character varying"),
    )
    op.drop_column("chat_participants", "updated_at")
    op.drop_column("chat_participants", "created_at")
    op.alter_column(
        "attachments",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "attachments",
        "scanned_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column(
        "attachments",
        "status",
        existing_type=sa.VARCHAR(length=16),
        nullable=True,
        existing_server_default=sa.text("'pending'::character varying"),
    )
    op.alter_column(
        "attachments", "size_bytes", existing_type=sa.BIGINT(), nullable=True
    )
    op.alter_column(
        "attachments",
        "content_type",
        existing_type=sa.VARCHAR(length=127),
        nullable=True,
    )
    op.alter_column(
        "attachments", "filename", existing_type=sa.VARCHAR(length=255), nullable=True
    )
    op.alter_column("attachments", "s3_key", existing_type=sa.TEXT(), nullable=True)
    op.alter_column(
        "attachments", "uploader_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.drop_column("attachments", "updated_at")
    # ### end Alembic commands ###
